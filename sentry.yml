# docker exec -it <container_web_name> sentry upgrade
# docker run --rm sentry config generate-secret-key

version: '3.7'

x-defaults: &defaults
  image: sentry:9.1.2
  environment:
    - SENTRY_MEMCACHED_HOST=memcached
    - SENTRY_REDIS_HOST=redis
    - SENTRY_POSTGRES_HOST=postgres
    - SENTRY_EMAIL_HOST=smtp
    - SENTRY_SECRET_KEY=${SENTRY_SECRET_KEY:-"b%msj2qkn#_2v+cochcvb^(*b-q@u@l80!k5ip-5n6rjaodnvu"}
  volumes:
    - ${VOLUME_PATH}sentry:/var/lib/sentry/files

services:
  memcached:
    image: memcached:1.5-alpine
    networks:
      - internal

  redis:
    image: redis:3.2-alpine
    networks:
      - internal

  postgres:
    image: postgres:9.5
    volumes:
      - ${VOLUME_PATH}postgres:/var/lib/postgresql/data
    networks:
      - internal

  web:
    <<: *defaults
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.sentry-${NUMBER:-1}.rule=Host(`${DOMAIN:-sentry.localhost}`)
        - traefik.http.routers.sentry-${NUMBER:-1}.entrypoints=${SCHEME:-http}
        - traefik.http.routers.sentry-${NUMBER:-1}.service=sentry-${NUMBER:-1}
        - traefik.http.routers.sentry-${NUMBER:-1}.tls.certresolver=letsencrypt
        - traefik.http.services.sentry-${NUMBER:-1}.loadbalancer.server.port=9000
    networks:
      - traefik
      - internal

  cron:
    <<: *defaults
    command: run cron
    networks:
      - internal

  worker:
    <<: *defaults
    command: run worker
    networks:
      - internal

volumes:
  postgres:
  sentry:

networks:
  internal:
    driver: overlay
    attachable: true
  traefik:
    external: true
    name: traefik-net
