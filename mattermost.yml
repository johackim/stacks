# To rename mattermost user:
# ./bin/mattermost --config="postgres://mattermost:myp@ssw0rd@postgres:5432/mattermost?sslmode=disable" team rename mattermost <newname>
# ./bin/mattermost --config="postgres://mattermost:myp@ssw0rd@postgres:5432/mattermost?sslmode=disable" user create --firstname user --system_admin --email contact@example.org --username user --password "password"

version: "3.7"

services:
  init:
    image: alpine:latest
    command: chown -R 2000:2000 /mattermost
    volumes:
      - ${VOLUME_PATH}data:/mattermost/data
      - ${VOLUME_PATH}config:/mattermost/config
      - ${VOLUME_PATH}plugins:/mattermost/plugins
    deploy:
      restart_policy:
        condition: on-failure

  app:
    image: mattermost/mattermost-team-edition:${VERSION:-release-5.37}
    volumes:
      - ${VOLUME_PATH}data:/mattermost/data
      - ${VOLUME_PATH}config:/mattermost/config
      - ${VOLUME_PATH}plugins:/mattermost/plugins
    environment:
      - MM_SQLSETTINGS_DATASOURCE=postgres://mattermost:myp@ssw0rd@postgres:5432/mattermost?sslmode=disable&connect_timeout=10
      - MM_SERVICESETTINGS_SITEURL=${SCHEME:-http}://${DOMAIN:-mattermost.localhost}
      - MM_LOCALIZATIONSETTINGS_DEFAULTCLIENTLOCALE=${LOCALE:-fr}
      - MM_LOCALIZATIONSETTINGS_AVAILABLELOCALES=${LOCALE:-fr}
      - MM_EMAILSETTINGS_ENABLEPREVIEWMODEBANNER=FALSE
      - MM_EMAILSETTINGS_SMTPUSERNAME=${SMTP_USERNAME}
      - MM_EMAILSETTINGS_SMTPPASSWORD=${SMTP_PASSWORD}
      - MM_EMAILSETTINGS_SMTPSERVER=${SMTP_SERVER}
      - MM_EMAILSETTINGS_SMTPPORT=${SMTP_PORT}
      - MM_PLUGINSETTINGS_ENABLEUPLOADS=${ENABLE_PLUGINS:-true}
      - MM_TEAMSETTINGS_MAXUSERSPERTEAM=${MAXUSERSPERTEAM:-100}
      - edition=team
    networks:
      - internal

  web:
    image: mattermost/mattermost-prod-web:${VERSION:-latest}
    environment:
      - APP_PORT_NUMBER=8065
      - APP_HOST={{ index .Service.Labels "com.docker.stack.namespace" }}_app
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.mattermost-${NUMBER:-1}.rule=Host(`${DOMAIN:-mattermost.localhost}`)
        - traefik.http.routers.mattermost-${NUMBER:-1}.entrypoints=${SCHEME:-http}
        - traefik.http.routers.mattermost-${NUMBER:-1}.service=mattermost-${NUMBER:-1}
        - traefik.http.routers.mattermost-${NUMBER:-1}.tls.certresolver=letsencrypt
        - traefik.http.services.mattermost-${NUMBER:-1}.loadbalancer.server.port=8080
    networks:
      - internal
      - traefik

  postgres:
    image: postgres:11.2-alpine
    environment:
      POSTGRES_DB: mattermost
      POSTGRES_USER: mattermost
      POSTGRES_PASSWORD: myp@ssw0rd
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "mattermost"]
    volumes:
      - ${VOLUME_PATH}postgres:/var/lib/postgresql/data
    networks:
      - internal

volumes:
  data:
  config:
  plugins:
  postgres:

networks:
  internal:
    driver: overlay
    attachable: true
  traefik:
    external: true
    name: traefik-net
